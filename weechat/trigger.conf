#
# weechat -- trigger.conf
#
# WARNING: It is NOT recommended to edit this file by hand,
# especially if WeeChat is running.
#
# Use /set or similar command to change settings in WeeChat.
#
# For more info, see: https://weechat.org/doc/quickstart
#

[look]
enabled = on
monitor_strip_colors = off

[color]
flag_command = lightgreen
flag_conditions = yellow
flag_post_action = lightblue
flag_regex = lightcyan
flag_return_code = lightmagenta
regex = white
replace = cyan
trigger = green
trigger_disabled = red

[trigger]
beep.arguments = ""
beep.command = "/print -beep"
beep.conditions = "${tg_displayed} && (${tg_highlight} || ${tg_msg_pv})"
beep.enabled = on
beep.hook = print
beep.post_action = none
beep.regex = ""
beep.return_code = ok
buflist_tools.arguments = "buflist_tools;manage pascalpoitras's custom buflist (https://gist.github.com/pascalpoitras/8406501);resize <buflist_size> <1st_section_size>|? [<2nd_section_size>] || hide|show|toggle <subsection>|-old|-new|-all [<subsection>...];          resize: resize the buflist size and the two sections${\n}            hide: hide a subsection${\n}            show: show a subsection${\n}          toggle: toggle a subsection${\n}    buflist_size: new size for the buflist${\n}1st_section_size: size of first section${\n}2nd_section_size: size of second section${\n}      subsection: a subsection (buffer_number, fold, indent, nick_prefix, buffer_name, lag, filter, relay_count, extra, hotlist)${\n}            -old: only the old buflist sections (buffer_number, indent, buffer_name, filter, relay_count, extra, hotlist)${\n}            -new: only the new buflist sections (fold, nick_prefix, lag)${\n}            -all: do action on all subsections${\n}${\n}The buflist is composed of two sections. The first one is composed of nine subsections. The buffer number, the fold symbol (servers only), the indentation, the nick prefix (channels only), the buffer name, the lag (servers only), the filter (on some buffer like fset, scripts...), the relay count (for the relay buffer) and extra infos about a buffer. The second section is only composed of hotlist. The two sections can be resized independently. If you want to hide a subsection, for example, buffer_number, the bar will not be resized and the section will not be resized too. So you will have more space for the other subsection of the first section. If you want to hide the hotlist, you can use the hide command but then the second subsection will be empty and use space for nothing, space that cant be used by the first section. So if you want to hide the hotlist, you'd be better off using resize and give all the spaces to the first section. TLDR if you're not gonna use the hotlist, do not reserve space for it in the first place.${\n}${\n}Exemples:${\n}  Resize the bar to 20 with the size 15 for first section and 5 for second section:${\n}    /buflist_tools resize 20 15${\n}  Show only the sections that was available in the old buflist:${\n}    /buflist_tools hide -all${\n}    /buflist_tools show -old;resize 25 || show|hide|toggle buffer_number|fold|indent|nick_prefix|buffer_name|lag|filter|relay_count|extra|hotlist|-old|-new|-all|%*"
buflist_tools.command = "/eval -s ${if:${tg_argv1}==resize?/mute /set plugins.var.buflist_section_1st ${tg_argv3}\;/mute /set plugins.var.buflist_section_2nd ${tg_argv4}\;/bar set buflist size ${tg_argv2}:${tg_argv_eol2}}"
buflist_tools.conditions = "${tg_argv1} =~ ^(hide|show|toggle)$ && ${tg_argv_eol2} =~ ^((buffer_number|fold|indent|nick_prefix|buffer_name|lag|filter|relay_count|extra|hotlist|-old|-new|-all)( +|$))+$ || ${tg_argv1} == resize && ${tg_argv2} =~ ^[0-9]+$ && (${tg_argv3} =~ ^[0-9]+$ && ${tg_argv4} =~ ^[0-9]*$ || ${tg_argv3} == ? && ${tg_argv4} =~ ^[0-9]+$)"
buflist_tools.enabled = on
buflist_tools.hook = command
buflist_tools.post_action = none
buflist_tools.regex = "/\?/${calc:${tg_argv2}-${tg_argv4}}/tg_argv3 /^$/${if:${tg_argv1}==resize?${calc:${tg_argv2}-${tg_argv3}}}/tg_argv4 /-old/buffer_number indent buffer_name filter relay_count extra hotlist/tg_argv_eol2 /-new/fold nick_prefix lag/tg_argv_eol2 /-all/buffer_number fold indent nick_prefix buffer_name lag filter relay_count extra hotlist/tg_argv_eol2 ===buffer_number|fold|indent|nick_prefix|buffer_name|lag|filter|relay_count|extra|hotlist===/mute /set plugins.var.buflist_subsection_${re:0} ${if:${tg_argv1}==hide?0:${if:${tg_argv1}==show?1:${if:${plugins.var.buflist_subsection_${re:0}}?0:1}}};===tg_argv_eol2"
buflist_tools.return_code = ok
chaos.arguments = "*,irc_in_join"
chaos.command = "/quote -server ${server} kick ${channel} ${nick} :no u"
chaos.conditions = "${channel} =~ #chaos || ${channel} =~ #unruly || ${channel} =~ #choas && ${nick} != spacehare && ${nick} != kiedtl && ${nick} != xfnw && ${nick} != xfn"
chaos.enabled = off
chaos.hook = signal
chaos.post_action = none
chaos.regex = ""
chaos.return_code = ok
cmd_pass.arguments = "5000|input_text_display;5000|history_add;5000|irc_command_auth"
cmd_pass.command = ""
cmd_pass.conditions = ""
cmd_pass.enabled = on
cmd_pass.hook = modifier
cmd_pass.post_action = none
cmd_pass.regex = "==^((/(msg|m|quote) +(-server +[^ ]+ +)?nickserv +(id|identify|set +password|ghost +[^ ]+|release +[^ ]+|regain +[^ ]+|recover +[^ ]+) +)|/oper +[^ ]+ +|/quote +pass +|/set +[^ ]*password[^ ]* +|/secure +(passphrase|decrypt|set +[^ ]+) +)(.*)==${re:1}${hide:*,${re:+}}"
cmd_pass.return_code = ok
cmd_pass_register.arguments = "5000|input_text_display;5000|history_add;5000|irc_command_auth"
cmd_pass_register.command = ""
cmd_pass_register.conditions = ""
cmd_pass_register.enabled = on
cmd_pass_register.hook = modifier
cmd_pass_register.post_action = none
cmd_pass_register.regex = "==^(/(msg|m|quote) +nickserv +register +)([^ ]+)(.*)==${re:1}${hide:*,${re:3}}${re:4}"
cmd_pass_register.return_code = ok
dim_freenode_xfnw.arguments = "weechat_print"
dim_freenode_xfnw.command = ""
dim_freenode_xfnw.conditions = "${tg_tag_nick} == xfnw && ${server} == freenode"
dim_freenode_xfnw.enabled = on
dim_freenode_xfnw.hook = modifier
dim_freenode_xfnw.post_action = none
dim_freenode_xfnw.regex = "/(.*)/${color:darkgray}${tg_prefix_nocolor}\t${color:darkgray}${tg_message_nocolor}/"
dim_freenode_xfnw.return_code = ok
dim_tilde_acdw-is-sus.arguments = "weechat_print"
dim_tilde_acdw-is-sus.command = ""
dim_tilde_acdw-is-sus.conditions = "${tg_tag_nick} == acdw-is-sus && ${server} == tilde"
dim_tilde_acdw-is-sus.enabled = on
dim_tilde_acdw-is-sus.hook = modifier
dim_tilde_acdw-is-sus.post_action = none
dim_tilde_acdw-is-sus.regex = "/(.*)/${color:darkgray}${tg_prefix_nocolor}\t${color:darkgray}${tg_message_nocolor}/"
dim_tilde_acdw-is-sus.return_code = ok
dim_tilde_cow2020.arguments = "weechat_print"
dim_tilde_cow2020.command = ""
dim_tilde_cow2020.conditions = "${tg_tag_nick} == cow2020 && ${server} == tilde"
dim_tilde_cow2020.enabled = on
dim_tilde_cow2020.hook = modifier
dim_tilde_cow2020.post_action = none
dim_tilde_cow2020.regex = "/(.*)/${color:darkgray}${tg_prefix_nocolor}\t${color:darkgray}${tg_message_nocolor}/"
dim_tilde_cow2020.return_code = ok
dim_tilde_jayd3n.arguments = "weechat_print"
dim_tilde_jayd3n.command = ""
dim_tilde_jayd3n.conditions = "${tg_tag_nick} == jayd3n && ${server} == tilde"
dim_tilde_jayd3n.enabled = on
dim_tilde_jayd3n.hook = modifier
dim_tilde_jayd3n.post_action = none
dim_tilde_jayd3n.regex = "/(.*)/${color:darkgray}${tg_prefix_nocolor}\t${color:darkgray}${tg_message_nocolor}/"
dim_tilde_jayd3n.return_code = ok
dim_tilde_jayden.arguments = "weechat_print"
dim_tilde_jayden.command = ""
dim_tilde_jayden.conditions = "${tg_tag_nick} == jayden && ${server} == tilde"
dim_tilde_jayden.enabled = on
dim_tilde_jayden.hook = modifier
dim_tilde_jayden.post_action = none
dim_tilde_jayden.regex = "/(.*)/${color:darkgray}${tg_prefix_nocolor}\t${color:darkgray}${tg_message_nocolor}/"
dim_tilde_jayden.return_code = ok
dim_tilde_jayden1.arguments = "weechat_print"
dim_tilde_jayden1.command = ""
dim_tilde_jayden1.conditions = "${tg_tag_nick} == jayden1 && ${server} == tilde"
dim_tilde_jayden1.enabled = on
dim_tilde_jayden1.hook = modifier
dim_tilde_jayden1.post_action = none
dim_tilde_jayden1.regex = "/(.*)/${color:darkgray}${tg_prefix_nocolor}\t${color:darkgray}${tg_message_nocolor}/"
dim_tilde_jayden1.return_code = ok
dim_tilde_jmw0.arguments = "weechat_print"
dim_tilde_jmw0.command = ""
dim_tilde_jmw0.conditions = "${tg_tag_nick} == jmw\0 && ${server} == tilde"
dim_tilde_jmw0.enabled = on
dim_tilde_jmw0.hook = modifier
dim_tilde_jmw0.post_action = none
dim_tilde_jmw0.regex = "/(.*)/${color:darkgray}${tg_prefix_nocolor}\t${color:darkgray}${tg_message_nocolor}/"
dim_tilde_jmw0.return_code = ok
dim_tilde_jmw2020.arguments = "weechat_print"
dim_tilde_jmw2020.command = ""
dim_tilde_jmw2020.conditions = "${tg_tag_nick} == jmw2020 && ${server} == tilde"
dim_tilde_jmw2020.enabled = on
dim_tilde_jmw2020.hook = modifier
dim_tilde_jmw2020.post_action = none
dim_tilde_jmw2020.regex = "/(.*)/${color:darkgray}${tg_prefix_nocolor}\t${color:darkgray}${tg_message_nocolor}/"
dim_tilde_jmw2020.return_code = ok
dim_tilde_jmw2020_.arguments = "weechat_print"
dim_tilde_jmw2020_.command = ""
dim_tilde_jmw2020_.conditions = "${tg_tag_nick} == jmw2020_ && ${server} == tilde"
dim_tilde_jmw2020_.enabled = on
dim_tilde_jmw2020_.hook = modifier
dim_tilde_jmw2020_.post_action = none
dim_tilde_jmw2020_.regex = "/(.*)/${color:darkgray}${tg_prefix_nocolor}\t${color:darkgray}${tg_message_nocolor}/"
dim_tilde_jmw2020_.return_code = ok
dim_tilde_leapofazzam.arguments = "weechat_print"
dim_tilde_leapofazzam.command = ""
dim_tilde_leapofazzam.conditions = "${tg_tag_nick} == leapofazzam && ${server} == tilde"
dim_tilde_leapofazzam.enabled = on
dim_tilde_leapofazzam.hook = modifier
dim_tilde_leapofazzam.post_action = none
dim_tilde_leapofazzam.regex = "/(.*)/${color:darkgray}${tg_prefix_nocolor}\t${color:darkgray}${tg_message_nocolor}/"
dim_tilde_leapofazzam.return_code = ok
khuxkm.arguments = "*,irc_in_join"
khuxkm.command = "/quote -server ${server} kick ${channel} ${nick} :triggers are nice"
khuxkm.conditions = "${channel} =~ #chaos && ${nick} =~ khuxkm || ${nick} =~ nsa"
khuxkm.enabled = on
khuxkm.hook = signal
khuxkm.post_action = none
khuxkm.regex = ""
khuxkm.return_code = ok
modifier_is_nick_valid.arguments = "input_text_display"
modifier_is_nick_valid.command = ""
modifier_is_nick_valid.conditions = "${tg_string_nocolor} =~ ^/nick .+ && ${buffer.plugin.name} == irc"
modifier_is_nick_valid.enabled = on
modifier_is_nick_valid.hook = modifier
modifier_is_nick_valid.post_action = none
modifier_is_nick_valid.regex = "==^/nick (.+)==${re:1}==tg_string_nocolor ===/nick (.+)===/nick ${if:${info:irc_is_nick,${tg_string_nocolor}}&&${cutscr:${info:irc_server_isupport_value,${server},NICKLEN},,${tg_string_nocolor}}==${tg_string_nocolor}?${color:*green}:${color:*red}}${re:1}      -- NICKLEN:${color:-bold} ${calc:${info:irc_server_isupport_value,${server},NICKLEN} - (${buffer.input_buffer_length} - 6)} / ${info:irc_server_isupport_value,${server},NICKLEN}  ${color:bold}Allowed Chars: ${color:-bold}a-zA-Z0-9_-\[]{}^`|===tg_string"
modifier_is_nick_valid.return_code = ok
msg_auth.arguments = "5000|irc_message_auth"
msg_auth.command = ""
msg_auth.conditions = ""
msg_auth.enabled = on
msg_auth.hook = modifier
msg_auth.post_action = none
msg_auth.regex = "==^(.*(id|identify|set +password|register|ghost +[^ ]+|release +[^ ]+|regain +[^ ]+|recover +[^ ]+) +)(.*)==${re:1}${hide:*,${re:+}}"
msg_auth.return_code = ok
server_pass.arguments = "5000|input_text_display;5000|history_add"
server_pass.command = ""
server_pass.conditions = ""
server_pass.enabled = on
server_pass.hook = modifier
server_pass.post_action = none
server_pass.regex = "==^(/(server|connect) .*-(sasl_)?password=)([^ ]+)(.*)==${re:1}${hide:*,${re:4}}${re:5}"
server_pass.return_code = ok
